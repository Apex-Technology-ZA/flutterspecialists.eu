---
const action = import.meta.env.PUBLIC_MAILCHIMP_FORM_ACTION;

if (!action) {
  console.error('PUBLIC_MAILCHIMP_FORM_ACTION environment variable is not set');
}
---
<form action={action} method="post" id="newsletter-form" class="space-y-3">
  <div>
    <label for="mce-EMAIL" class="sr-only">Email address</label>
    <input id="mce-EMAIL" type="email" name="EMAIL" required placeholder="you@example.com" class="w-full rounded border px-3 py-2" />
  </div>
  <!-- Hidden bot protection field -->
  <div style="position: absolute; left: -5000px;" aria-hidden="true">
    <input type="text" name="b_fc79e1864cf1a1f4768a0e99b_5aa1ce573e" tabindex="-1" value="">
  </div>
  <button type="submit" class="rounded bg-primary px-4 py-2 text-white hover:bg-secondary">Subscribe</button>
  <p class="text-xs text-gray-500">We respect your privacy. Unsubscribe anytime.</p>
  <div id="newsletter-message" class="hidden mt-2 text-sm"></div>
</form>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('newsletter-form');
    const messageDiv = document.getElementById('newsletter-message');
    const submitButton = form?.querySelector('button[type="submit"]');

    console.log('Newsletter form initialized');
    console.log('Form action:', form?.action);

    if (!form?.action) {
      console.error('Newsletter form: No Mailchimp action URL configured');
      if (messageDiv) {
        messageDiv.textContent = 'Newsletter temporarily unavailable. Please contact us directly.';
        messageDiv.className = 'mt-2 text-sm text-amber-600';
        messageDiv.classList.remove('hidden');
      }
      if (submitButton) {
        submitButton.disabled = true;
      }
      return;
    }

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(form);
      const email = formData.get('EMAIL');

      console.log('Form submitted with email:', email);
      console.log('Form action URL:', form.action);

      if (!email) {
        console.log('No email provided');
        if (messageDiv) {
          messageDiv.textContent = 'Please enter your email address.';
          messageDiv.className = 'mt-2 text-sm text-red-600';
          messageDiv.classList.remove('hidden');
        }
        return;
      }

      // Show loading state
      if (submitButton) {
        submitButton.textContent = 'Subscribing...';
        submitButton.disabled = true;
      }

      try {
        console.log('Sending request to Mailchimp...');
        console.log('Request URL:', form.action);
        console.log('Request method: POST');
        console.log('Request body:', new URLSearchParams(formData).toString());

        const response = await fetch(form.action, {
          method: 'POST',
          body: formData,
          mode: 'no-cors' // Mailchimp doesn't allow CORS, so we can't read the response
        });

        console.log('Request sent successfully');
        console.log('Response status:', response?.status);
        console.log('Response type:', response?.type);

        // Since we can't read the response due to CORS, we'll show a success message
        if (messageDiv) {
          messageDiv.textContent = 'Thanks for subscribing! Please check your email to confirm your subscription.';
          messageDiv.className = 'mt-2 text-sm text-green-600';
          messageDiv.classList.remove('hidden');
        }

        // Clear the form
        form.reset();

        // Hide the message after 5 seconds
        setTimeout(() => {
          if (messageDiv) {
            messageDiv.classList.add('hidden');
          }
        }, 5000);

      } catch (error) {
        console.error('Error submitting form:', error);
        if (messageDiv) {
          messageDiv.textContent = 'Something went wrong. Please try again or contact us directly.';
          messageDiv.className = 'mt-2 text-sm text-red-600';
          messageDiv.classList.remove('hidden');
        }
      } finally {
        // Reset button state
        if (submitButton) {
          submitButton.textContent = 'Subscribe';
          submitButton.disabled = false;
        }
      }
    });
  });
</script>